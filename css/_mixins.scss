//Global Variables:
//______________________________________________________________________________
$cback: rgba(225,225,225,1);
$cfront: rgba(0,0,0,1);
$cpaint: rgba(255,0,0,1);
$links_color: rgba(140,140,225,0.9);
$core_colortest1: rgba(110,110,250,0.5);
$core_colortest2: rgba(110,250,110,0.5);
$core_colortest3: rgba(250,110,110,0.5);
$main_font: 'Montserrat', sans-serif;

// Post Category Colors
$cCategory1: rgba(200,0,0,1);
$cCategory2: rgba(0,200,0,1);
$cCategory3: rgba(0,0,200,1);
$cCategory4: rgba(200,200,0,1);
$cCategory5: rgba(200,0,200,1);
$cCategory6: rgba(0,200,200,1);
$cCategory7: rgba(110,0,0,1);
$cCategory8: rgba(0,110,0,1);
$cCategory9: rgba(0,0,110,1);
$cCategory10: rgba(110,110,0,1);
$cCategory11: rgba(110,0,110,1);
$cCategory12: rgba(0,110,110,1);
$cCategory13: rgba(200,100,0,1);
$cCategory14: rgba(200,0,100,1);
$cCategory15: rgba(100,200,0,1);
$cCategory16: rgba(0,200,100,1);
$cCategory17: rgba(100,0,200,1);
$cCategory18: rgba(0,100,200,1);


// Post Category Default Images
$iCategory1: url(img/svg_icons/iconmonstr-facebook-icon.svg);
$iCategory2: url(img/svg_icons/iconmonstr-infinity-3-icon.svg);
$iCategory3: url(img/svg_icons/iconmonstr-tools-2-icon.svg);
$iCategory4: url(img/svg_icons/iconmonstr-battery-7-icon.svg);
$iCategory5: url(img/svg_icons/iconmonstr-crosshair-6-icon.svg);
$iCategory6: url(img/svg_icons/iconmonstr-barcode-icon.svg);
$iCategory7: url(img/svg_icons/iconmonstr-coffee-icon.svg);
$iCategory8: url(img/svg_icons/iconmonstr-twitter-icon.svg);
$iCategory9: url(img/svg_icons/iconmonstr-share-icon.svg);
$iCategory10: url(img/svg_icons/iconmonstr-smiley-lips-sealed-icon.svg);
$iCategory11: url(img/svg_icons/iconmonstr-network-6-icon.svg);
$iCategory12: url(img/svg_icons/iconmonstr-computer-6-icon.svg);
$iCategory13: url(img/svg_icons/iconmonstr-youtube-new-icon.svg);
$iCategory14: url(img/svg_icons/iconmonstr-smiley-lol-icon.svg);
$iCategory15: url(img/svg_icons/iconmonstr-smiley-lol-icon.svg);
$iCategory16: url(img/svg_icons/iconmonstr-smiley-lol-icon.svg);
$iCategory17: url(img/svg_icons/iconmonstr-smiley-lol-icon.svg);
$iCategory18: url(img/svg_icons/iconmonstr-smiley-lol-icon.svg);




::selection {
    color:rgba(100,250,250,0.9) !important;
    background:rgba(50,50,70,0.5) !important;
}

//Mixins:
//______________________________________________________________________________

@mixin acceler8 {
  -webkit-transform: translateZ(0);
   -moz-transform: translateZ(0);
   -ms-transform: translateZ(0);
   -o-transform: translateZ(0);
   transform: translateZ(0);
}

@mixin clearfix {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin cfb {
	color: $cFront;
	background-color: $cBack;
}

@mixin cbf {
	color: $cBack;
	background-color: $cFront;
}

@mixin tcfront($t: 0.5) {
  color: transparentize($cfront, $t);
}

@mixin tcback($t: 0.5) {
  color: transparentize($cback, $t);
}

@mixin tbfront($t: 0.5) {
  background-color: transparentize($cfront, $t);
}

@mixin tbback($t: 0.5) {
  background-color: transparentize($cback, $t);
}

@mixin flpr {
	position: relative;
	float: left;
}

@mixin frpr {
	position: relative;
	float: right;
}

@mixin mpz {
	margin: 0;
	padding: 0;
}

@mixin fixedbg {
	//background-image:url(img/optimized_walls/general/pexels-photo.jpg);
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
	background-attachment: fixed;
}

@mixin bordertb ($t: 1px, $b: 1px, $c: 					transparentize($core_colors_main, 0.5)){
	border-top: solid $t $c;
	border-bottom: solid $b $c;
}

@mixin coreslice {
	@include mpz;
	@include flpr;
	width: 100%;
	height: auto;
}

@mixin wminmax ($w: auto, $h: auto){
  min-width: $w;
  max-width: $h;
}

@mixin absobox ($w: 100%, $h: 100%) {
  position: absolute;
  width: $w;
  height: $h;
}

@mixin placebox ($t:auto, $r:auto, $b:auto, $l:auto, $w: auto, $h: auto) {
  position: absolute;
  top: $t;
  right: $r;
  bottom: $b;
  left: $l;
  width: $w;
  height: $h;
}

@mixin floatbox ($w: 100%, $h: 100%, $f: left) {
  position: relative;
  width: $w;
  height: $h;
  float: $f;
}

@mixin fixbox ($t:auto, $r:auto, $b:auto, $l:auto, $w: 100%, $h: 100%) {
  position: fixed;
  top: $t;
  right: $r;
  bottom: $b;
  left: $l;
  width: $w;
  height: $h;
}

@mixin border-radius($tl, $tr, $br, $bl) {
          border-top-left-radius: $tl;
          border-top-right-radius: $tr;
          border-bottom-right-radius: $br;
          border-bottom-left-radius: $bl;
          -ms-border-top-left-radius: $tl;
          -ms-border-top-right-radius: $tr;
          -ms-border-bottom-right-radius: $br;
          -ms-border-bottom-left-radius: $bl;
          -moz-border-top-left-radius: $tl;
          -moz-border-top-right-radius: $tr;
          -moz-border-bottom-right-radius: $br;
          -moz-border-bottom-left-radius: $bl;
          -webkit-border-top-left-radius: $tl;
          -webkit-border-top-right-radius: $tr;
          -webkit-border-bottom-right-radius: $br;
          -webkit-border-bottom-left-radius: $bl;
}

@mixin combined-radius($tl, $tr, $br, $bl) {
    @include background-clip;
    @include border-radius($tl, $tr, $br, $bl);
}

@mixin borders($t:0, $r:0, $b:0, $l:0, $c: none) {
    border-top: solid $t $c;
    border-right: solid $r $c;
    border-bottom: solid $b $c;
    border-left: solid $l $c;
}

@mixin box-shadow($t, $l, $blur, $spread, $color, $inset: false) {
	@if $inset {
	-webkit-box-shadow:inset $l $t $blur $spread $color;
	-moz-box-shadow:inset $l $t $blur $spread $color;
	box-shadow:inset $l $t $blur $spread $color;
	}
	@else {
	-webkit-box-shadow: $l $t $blur $spread $color;
	-moz-box-shadow: $l $t $blur $spread $color;
	box-shadow: $l $t $blur $spread $color;
	}
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin pcenter {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin background-clip {
    background-clip: padding-box;
}



//Fade In Animation
@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }
@-moz-keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }
@keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }
.fade-in {
  opacity: 0;
  /* make things invisible upon start */
  -webkit-animation: fadeIn ease-in 1;
  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation: fadeIn ease-in 1;
  animation: fadeIn ease-in 1;
  -webkit-animation-fill-mode: forwards;
  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
  -webkit-animation-duration: 0.5s;
  -moz-animation-duration: 0.5s;
  animation-duration: 0.5s; }
